version: '3.8'

services:
  nextjs:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: newcrm:dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    env_file:
      - .env
    environment:
      - NODE_ENV=development
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run dev

  postgres:
    image: postgres:15
    restart: always
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=crm
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  seed:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    command: sh -c "npx ts-node src/db/seed.ts"
    restart: on-failure:3

  drizzle-studio:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: npm run studio
    ports:
      - "4983:4983"
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data_dev: